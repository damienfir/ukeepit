<Controls:MetroWindow x:Class="uKeepIt.ConfigurationWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        xmlns:self="clr-namespace:uKeepIt"
        xmlns:local="clr-namespace:uKeepIt"
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        Title="uKeepIt" SizeToContent="Height"
        ShowTitleBar="True"
        SaveWindowPosition="True"
        BorderBrush="{DynamicResource AccentColorBrush}"
        BorderThickness="0"
        EnableDWMDropShadow="True"
        ResizeMode="CanMinimize"
        WindowTransitionsEnabled="False" Width="400"
>
    
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Cobalt.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="/Resources/Icons.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <self:SpaceTemplateSelector x:Key="spaceTemplateSelector"/>
            
            <Style x:Key="AccentColorButton" BasedOn="{StaticResource MetroButton}" TargetType="Button">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
                <Setter Property="Foreground" Value="{DynamicResource IdealForegroundColorBrush}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Style>

            <Style x:Key="PlainButton" TargetType="Button">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFC1C1C1"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="RemoveButton" TargetType="Button" BasedOn="{StaticResource PlainButton}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Red"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="AddButton" TargetType="Button" BasedOn="{StaticResource PlainButton}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Green"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SpaceCheckout" TargetType="Button" BasedOn="{StaticResource PlainButton}">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Green"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ShowButton" TargetType="Button" BasedOn="{StaticResource PlainButton}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HotTrackBrushKey}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <StackPanel Margin="10">
        <StackPanel>
            <Label Content="Master Password" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" Padding="0,0,5,0" FontSize="16"/>
            <Control x:Name="uiPasswordWrapper" Padding="10" Margin="0,5">
                <Control.Resources>
                    <ControlTemplate x:Key="uiPasswordSetTemplate">
                        <UniformGrid Columns="2">
                            <TextBlock HorizontalAlignment="Stretch" Text="Password already set"/>
                            <Button Style="{DynamicResource AccentColorButton}" Click="ChangePassword_Click" Content="Change Password" Width="Auto" HorizontalAlignment="Right"/>
                        </UniformGrid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="uiPasswordNotSetTemplate">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" x:Name="password_input1" Controls:TextBoxHelper.Watermark="Enter password" Margin="0,0,5,0"/>
                            <TextBox Grid.Column="1" x:Name="password_input2" Controls:TextBoxHelper.Watermark="Enter again" Margin="0,0,5,0"/>
                            <Button Grid.Column="2" Click="CancelPassword_Click" x:Name="CancelPasswordButton" Content="Cancel" Width="Auto" HorizontalAlignment="Right" Margin="5,0,0,0"/>
                            <Button Style="{DynamicResource AccentColorButton}" Grid.Column="3" Click="SetPassword_Click" Content="Set Password" Width="Auto" HorizontalAlignment="Right" Margin="5,0,0,0"/>
                        </Grid>
                    </ControlTemplate>
                    <ControlTemplate x:Key="uiPasswordVerifyTemplate">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" x:Name="password_input_verify" Controls:TextBoxHelper.Watermark="Enter current password" Margin="0,0,5,0"/>
                            <Button Grid.Column="1" Click="CancelPassword_Click" x:Name="CancelPasswordButton" Content="Cancel" Width="Auto" HorizontalAlignment="Right" Margin="5,0,0,0"/>
                            <Button Style="{DynamicResource AccentColorButton}" Grid.Column="2" Click="VerifyPassword_Click" Content="Verify Password" Width="Auto" HorizontalAlignment="Right" Margin="5,0,0,0"/>
                        </Grid>
                    </ControlTemplate>
                </Control.Resources>
            </Control>
        </StackPanel>

        <StackPanel Margin="0,10,0,0">
            <UniformGrid Columns="2">
                <Label Content="Clouds" Margin="0" VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="16" Padding="0"/>
                <Button Click="StoreAdd_Click" Padding="0" Margin="0" HorizontalAlignment="Right" VerticalAlignment="Center" MinHeight="0" Height="25" ToolTip="Add cloud" Style="{DynamicResource AddButton}">
                    <TextBlock FontFamily="/uKeepIt;component/Resources/#Entypo" FontSize="48" FontWeight="Normal" TextDecorations="{x:Null}" VerticalAlignment="Center" Text="Z" />
                </Button>
            </UniformGrid>
            <ItemsControl x:Name="StoreView" Margin="0" d:DataContext="{d:DesignData Source=./DesignData/SampleStoreItems.xaml}" ItemsSource="{Binding Mode=OneWay}" ScrollViewer.VerticalScrollBarVisibility="Disabled">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="0,5,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Name}" ToolTip="{Binding Path}" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Segoe UI" FontSize="12"/>
                            <Button Click="StoreDelete_Click" Tag="{Binding Name}" Width="Auto" HorizontalAlignment="Right"  Grid.Column="1" Padding="0" Margin="0" VerticalAlignment="Center" Height="25" HorizontalContentAlignment="Center" ToolTip="Remove cloud" Style="{DynamicResource RemoveButton}" FontSize="48">
                                <TextBlock Text="Y" FontFamily="/uKeepIt;component/Resources/#Entypo" VerticalAlignment="Center" />
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
        
        <StackPanel Margin="0,40,0,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Label Content="Folders" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Center" FontSize="16" Padding="0"/>
                <Button Grid.Column="1" Style="{DynamicResource ShowButton}" Click="SpaceShow_Click" Tag="{Binding Name}" HorizontalAlignment="Right" Margin="0,0,5,0" Padding="0" Height="20">
                    <TextBlock FontFamily="/uKeepIt;component/Resources/#Entypo" Text="s" FontSize="36" VerticalAlignment="Center" />
                </Button>
                <Button Grid.Column="2" Style="{DynamicResource RemoveButton}" Click="SpaceRemove_Click" Width="Auto" HorizontalAlignment="Right" Tag="{Binding Name}" Margin="0,0,5,0" Padding="0" Height="20">
                    <TextBlock FontFamily="/uKeepIt;component/Resources/#Entypo" Text="Y" FontSize="36" VerticalAlignment="Center" />
                </Button>
                <Button Grid.Column="3" Style="{DynamicResource AddButton}" HorizontalAlignment="Right" VerticalAlignment="Center" Click="SpaceAdd_Click" Padding="0" Margin="0" MinHeight="0" Height="25">
                    <TextBlock FontFamily="/uKeepIt;component/Resources/#Entypo" Text="Z" FontSize="36" FontWeight="Normal" TextDecorations="{x:Null}" VerticalAlignment="Center" />
                </Button>
            </Grid>
            <ListBox SelectionMode="Single" x:Name="SpaceView" Margin="0,5,0,0" ItemTemplateSelector="{StaticResource spaceTemplateSelector}" d:DataContext="{d:DesignData Source=./DesignData/SampleSpaceItems.xaml}" ItemsSource="{Binding Mode=OneWay}" ScrollViewer.VerticalScrollBarVisibility="Visible" Height="197">
                <ListBox.Resources>
                    <SolidColorBrush x:Key="AccentColorBrush3" Color="#FFE8E8E8"/>
                    <SolidColorBrush x:Key="GrayBrush7" Color="White"/>
                    <SolidColorBrush x:Key="AccentSelectedColorBrush" Color="White"/>
                    <DataTemplate x:Key="SpaceNotCheckedoutTemplate">
                        <UniformGrid Margin="0,0,5,0" Columns="2">
                            <TextBlock Text="{Binding Name}" ToolTip="{Binding Path}" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="12" Foreground="#FF6E6E6E"/>
                            <Button Style="{DynamicResource SpaceCheckout}" Click="SpaceCheckout_Click" Tag="{Binding Name}" Width="29" HorizontalAlignment="Right" Margin="0" Padding="0" Height="20" ToolTip="Import to this computer">
                                <TextBlock FontFamily="/uKeepIt;component/Resources/#Entypo" Text="w" FontSize="36" VerticalAlignment="Center" />
                            </Button>
                        </UniformGrid>
                    </DataTemplate>
                    <DataTemplate x:Key="SpaceCheckedoutTemplate">
                        <TextBlock Text="{Binding Name}" ToolTip="{Binding Path}" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#FF6E6E6E"/>
                    </DataTemplate>
                </ListBox.Resources>
            </ListBox>
        </StackPanel>

        <!--<WrapPanel HorizontalAlignment="Right" Margin="0,20,0,0">
            --><!--<Button Content="Quit" Margin="0,0,10,0" Click="quit_btn_click" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="60"/>--><!--
            <Button Style="{StaticResource AccentColorButton}" Content="Done" Margin="0" Click="done_button_click" VerticalAlignment="Bottom" HorizontalAlignment="Right" Padding="10,5" Width="60"/>
        </WrapPanel>-->
    </StackPanel>
</Controls:MetroWindow>